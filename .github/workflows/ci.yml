name: CI

on:
  push:
    branches-ignore:
      - main
  pull_request:

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  ARTIFACT_NAME: y2hcl

jobs:
  build_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            toolchain: stable
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            toolchain: stable
          - target: x86_64-apple-darwin
            os: macos-latest
            toolchain: stable
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            toolchain: stable
          # - target: aarch64-unknown-linux-gnu
          #   os: ubuntu-latest
          # - target: aarch64-unknown-linux-musl
          #   os: ubuntu-latest
          # - target: aarch64-apple-darwin
          #   os: macos-latest
          # - target: universal-apple-darwin
          #   os: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}

      - name: Install Build Target
        run: |
          rustup target add ${{ matrix.target }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            /target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check Formatting
        run: cargo fmt -- --check

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Test
        run: cargo test --target ${{ matrix.target }}
